// Code generated by MockGen. DO NOT EDIT.
// Source: triplej.go

// Package mock_triplej is a generated GoMock package.
package mock_triplej

import (
	reflect "reflect"

	triplej "github.com/JamesBLewis/triplej-playlist-generator/tree/main/jobs/pkg/triplej"
	gomock "github.com/golang/mock/gomock"
)

// MockClienter is a mock of Clienter interface.
type MockClienter struct {
	ctrl     *gomock.Controller
	recorder *MockClienterMockRecorder
}

// MockClienterMockRecorder is the mock recorder for MockClienter.
type MockClienterMockRecorder struct {
	mock *MockClienter
}

// NewMockClienter creates a new mock instance.
func NewMockClienter(ctrl *gomock.Controller) *MockClienter {
	mock := &MockClienter{ctrl: ctrl}
	mock.recorder = &MockClienterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClienter) EXPECT() *MockClienterMockRecorder {
	return m.recorder
}

// FetchSongsFromTriplejAPI mocks base method.
func (m *MockClienter) FetchSongsFromTriplejAPI(playlistSize int) ([]triplej.RadioSong, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSongsFromTriplejAPI", playlistSize)
	ret0, _ := ret[0].([]triplej.RadioSong)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchSongsFromTriplejAPI indicates an expected call of FetchSongsFromTriplejAPI.
func (mr *MockClienterMockRecorder) FetchSongsFromTriplejAPI(playlistSize interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSongsFromTriplejAPI", reflect.TypeOf((*MockClienter)(nil).FetchSongsFromTriplejAPI), playlistSize)
}
